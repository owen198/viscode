input {
  file {
    path => "/var/log/jupyter_screen.log"
    type => "Jupyter-access"
    start_position => "beginning"
  }
}
filter {
#login
grok {patterns_dir => ["/etc/logstash/conf.d/pattern"]
  match => {"message" =>"\|%{DATA:garbege}\|%{LOGLEVEL:garbege}\|%{USERNAME:garbege}\|User logged in\: %{JUSER:userlogintimes}\|" }}

#Kernel Start
  grok {patterns_dir => ["/etc/logstash/conf.d/pattern"]
  match => {"message" => "\[%{INFOLEVEL:garbege} %{DATA:timestamp} %{JUSER:usr_writing} %{MKM:garbege}\:%{DATA:garbege}\] Kernel started\: %{DATA:garbege}\-%{DATA:garbege}\-%{DATA:garbege}\-%{DATA:garbege}\-%{DATA:garbege}"}
    add_tag => ["fileStarted"]
    tag_on_failure => [ ]
  }

#kernel shutdown
  grok {patterns_dir => ["/etc/logstash/conf.d/pattern"]
  match => {
    "message" => "\[%{INFOLEVEL:garbege} %{DATA:timestamp} %{JUSER:usr_writing} %{MKM:garbege}\:%{DATA:garbege}\] Kernel shutdown\: %{DATA:garbege}\-%{DATA:garbege}\-%{DATA:garbege}\-%{DATA:garbege}\-%{DATA:garbege}"
  }
    add_tag => ["fileEnded"]
    tag_on_failure => [ ]
  }

#others
  grok {
  patterns_dir => ["/etc/logstash/conf.d/pattern"]
  match => {  
    "message" => [
                 #log in&out count
                 "\|%{DATA:timestamp2}\|%{LOGLEVEL:level:string}\|%{USERNAME:process_name}\|%{DATA:loginout}\|",
                 #std open file
                 "\[%{INFOLEVEL:garbege} %{DATA:garbege} %{JUSER:usropenfile} %{MKM:garbege}\:%{DATA:garbege}\] Kernel started\: %{DATA:garbege}\-%{DATA:garbege}\-%{DATA:garbege}\-%{DATA:garbege}\-%{DATA:garbege}",
                 #user log in and out
                 "\[%{INFOLEVEL:garbege} %{DATA:timestamp} %{JUSER:usrfile_submit} handlers\:181\] %{SAVEFILE:garbege} %{SAVEFILE:garbege} %{SAVEFILE:garbege} %{DATA:garbege}", 
                 #user saved file
                 "\[%{INFOLEVEL:garbege} %{DATA:timestamp} %{JUSER:usrfile_creat_count} handlers\:170\] %{CREATNEWFILE:garbege} %{CREATNEWFILE:garbege} %{CREATNEWFILE:garbege} %{CREATNEWFILE:garbege}",
                "\[%{INFOLEVEL:garbege} %{DATA:timestamp} %{JUSER:garbege} handlers\:22\] %{JUSER:user_run} \| %{PASS:runstatus}",
                "\[%{INFOLEVEL:garbege} %{DATA:timestamp} %{JUSER:garbege} handlers\:20\] %{JUSER:user_run} \| %{DATA:runstatus} "
                ]
     }
  }
  if ![usrfile_submit] and ![usrfile_creat_count] and ![loginout] and ![usr_writing]  and ![user_run] {
  drop {}
  }
  date {
    match => [ "timestamp", "yyyy-MM-dd HH:mm:ss.SSS" ]
  }
  date {
    match => [ "timestamp2", "yyyy-MM-dd-HH:mm:ss" ]
  }
  grok {
    patterns_dir => ["/etc/logstash/conf.d/pattern"]
    match => { 
      "loginout" => "User logged in\: %{JUSER:jupyter_user}"
    }
    add_tag => ["taskStarted"]
    tag_on_failure => [ ]
  }
  grok {
    patterns_dir => ["/etc/logstash/conf.d/pattern"]
    match => { 
      "loginout" => "User logged out\: %{JUSER:jupyter_user}"
    }
    add_tag => ["taskEnded"]
    tag_on_failure => [ ]
  }
  elapsed {
            periodic_flush => true
            start_tag => "taskStarted"
            end_tag => "taskEnded"
            unique_id_field => "jupyter_user"
            timeout => 10800
            new_event_on_match => true
          }
 elapsed {
            periodic_flush => true
            start_tag => "fileStarted"
            end_tag => "fileEnded"
            unique_id_field => "usr_writing"
            timeout => 10800
            new_event_on_match => true
          }
}
output {
  file {
    path => "/etc/logstash/conf.d/logstash_output.json"
  }
  elasticsearch {
      hosts => "localhost:9200" 
  }
}
